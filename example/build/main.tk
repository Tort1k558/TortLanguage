TOKEN: [def] Type: Def
TOKEN: [sum] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [int] Type: Int
TOKEN: [a] Type: Identifier
TOKEN: [,] Type: Comma
TOKEN: [int] Type: Int
TOKEN: [b] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [{] Type: BlockStart
TOKEN: [return] Type: Return
TOKEN: [a] Type: Identifier
TOKEN: [+] Type: Plus
TOKEN: [b] Type: Identifier
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
TOKEN: [def] Type: Def
TOKEN: [fact] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [int] Type: Int
TOKEN: [a] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [{] Type: BlockStart
TOKEN: [if] Type: If
TOKEN: [a] Type: Identifier
TOKEN: [==] Type: Equal
TOKEN: [0] Type: IntLiteral
TOKEN: [or] Type: LogicalOr
TOKEN: [a] Type: Identifier
TOKEN: [==] Type: Equal
TOKEN: [1] Type: IntLiteral
TOKEN: [:] Type: Colon
TOKEN: [{] Type: BlockStart
TOKEN: [return] Type: Return
TOKEN: [1] Type: IntLiteral
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
TOKEN: [else] Type: Else
TOKEN: [:] Type: Colon
TOKEN: [{] Type: BlockStart
TOKEN: [return] Type: Return
TOKEN: [fact] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [a] Type: Identifier
TOKEN: [-] Type: Minus
TOKEN: [1] Type: IntLiteral
TOKEN: [)] Type: CloseParen
TOKEN: [*] Type: Mul
TOKEN: [a] Type: Identifier
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
TOKEN: [}] Type: BlockStop
TOKEN: [def] Type: Def
TOKEN: [double] Type: Double
TOKEN: [div] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [double] Type: Double
TOKEN: [a] Type: Identifier
TOKEN: [,] Type: Comma
TOKEN: [double] Type: Double
TOKEN: [b] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [;] Type: Semicolon
TOKEN: [def] Type: Def
TOKEN: [main] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [)] Type: CloseParen
TOKEN: [{] Type: BlockStart
TOKEN: [int] Type: Int
TOKEN: [a] Type: Identifier
TOKEN: [=] Type: Assign
TOKEN: [2] Type: IntLiteral
TOKEN: [,] Type: Comma
TOKEN: [b] Type: Identifier
TOKEN: [=] Type: Assign
TOKEN: [-] Type: Minus
TOKEN: [1] Type: IntLiteral
TOKEN: [;] Type: Semicolon
TOKEN: [int] Type: Int
TOKEN: [c] Type: Identifier
TOKEN: [=] Type: Assign
TOKEN: [cast] Type: Cast
TOKEN: [<] Type: Less
TOKEN: [int] Type: Int
TOKEN: [>] Type: Greater
TOKEN: [(] Type: OpenParen
TOKEN: [a] Type: Identifier
TOKEN: [or] Type: LogicalOr
TOKEN: [b] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [+] Type: Plus
TOKEN: [4] Type: IntLiteral
TOKEN: [;] Type: Semicolon
TOKEN: [print] Type: Print
TOKEN: [(] Type: OpenParen
TOKEN: [c] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [;] Type: Semicolon
TOKEN: [if] Type: If
TOKEN: [a] Type: Identifier
TOKEN: [<] Type: Less
TOKEN: [0] Type: IntLiteral
TOKEN: [:] Type: Colon
TOKEN: [{] Type: BlockStart
TOKEN: [}] Type: BlockStop
TOKEN: [else] Type: Else
TOKEN: [if] Type: If
TOKEN: [b] Type: Identifier
TOKEN: [<] Type: Less
TOKEN: [99] Type: IntLiteral
TOKEN: [:] Type: Colon
TOKEN: [{] Type: BlockStart
TOKEN: [while] Type: While
TOKEN: [b] Type: Identifier
TOKEN: [<] Type: Less
TOKEN: [5] Type: IntLiteral
TOKEN: [:] Type: Colon
TOKEN: [{] Type: BlockStart
TOKEN: [print] Type: Print
TOKEN: [(] Type: OpenParen
TOKEN: [b] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [;] Type: Semicolon
TOKEN: [b] Type: Identifier
TOKEN: [++] Type: Increment
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
TOKEN: [}] Type: BlockStop
TOKEN: [else] Type: Else
TOKEN: [:] Type: Colon
TOKEN: [{] Type: BlockStart
TOKEN: [print] Type: Print
TOKEN: [(] Type: OpenParen
TOKEN: [000000] Type: IntLiteral
TOKEN: [)] Type: CloseParen
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
TOKEN: [print] Type: Print
TOKEN: [(] Type: OpenParen
TOKEN: [fact] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [5] Type: IntLiteral
TOKEN: [)] Type: CloseParen
TOKEN: [)] Type: CloseParen
TOKEN: [;] Type: Semicolon
TOKEN: [print] Type: Print
TOKEN: [(] Type: OpenParen
TOKEN: [2] Type: IntLiteral
TOKEN: [|] Type: BitOr
TOKEN: [1] Type: IntLiteral
TOKEN: [)] Type: CloseParen
TOKEN: [;] Type: Semicolon
TOKEN: [return] Type: Return
TOKEN: [c] Type: Identifier
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
TOKEN: [def] Type: Def
TOKEN: [div] Type: Identifier
TOKEN: [(] Type: OpenParen
TOKEN: [double] Type: Double
TOKEN: [a] Type: Identifier
TOKEN: [,] Type: Comma
TOKEN: [double] Type: Double
TOKEN: [b] Type: Identifier
TOKEN: [)] Type: CloseParen
TOKEN: [{] Type: BlockStart
TOKEN: [return] Type: Return
TOKEN: [a] Type: Identifier
TOKEN: [/] Type: Div
TOKEN: [b] Type: Identifier
TOKEN: [;] Type: Semicolon
TOKEN: [}] Type: BlockStop
